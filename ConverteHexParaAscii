# Joel Rodrigues de Lima
# 20220008522

# Segmento de dados --------------

.data

msg_codificada: .word 0x00051010, 0x116A23B1, 0x21347582, 0x10061231, 0x11642467, 0x008695AB, 0x21CD6EEF, 0x00071323
                .word 0x11264517, 0x2089A2B0, 0x00E5F601, 0x212360F1, 0x11624533, 0x21676455, 0x00627089, 0x20AB8691
                .word 0x10A6CDB3, 0x21EF6C5D, 0x10E701F2, 0x00071423, 0x0162F345, 0x21677455, 0x10628971, 0x1082AB90
                .word 0x10A4CDB6, 0x016C9DEF, 0x21016031, 0x212362F3, 0x01745545, 0x10626770, 0x10868993, 0x21AB6AFB
                .word 0x00C6DDCD, 0x00E2F0EF, 0x116001E1, 0x0162F323, 0x20454754, 0x00667167, 0x20898290, 0x113AAB1B
                .word 0x113CCD0D, 0x000211EF

v_size: .word 168


# Segmento de texto (instruÃ§Ãµes)

.text

main:

#Começo do loop

move $t7, $zero # Esse vai ser o contador de iterações
lw $s0, v_size

start_loop:

beq $t7, $s0, exit #Aqui é 

lw $t0, msg_codificada($t7)

#Dividindo a word em bytes
#Byte 3
srl $t1, $t0, 24
andi $t1, $t1, 0xFF
#Byte 2
srl $t2, $t0, 16
andi $t2, $t2, 0xFF
#Byte 1
srl $t3, $t0, 8
andi $t3, $t3, 0xFF
#Byte 0
srl $t4, $t0, 0
andi $t4, $t4, 0xFF

#Determinando os Nibbles do Byte 3
srl $t5, $t1, 4
andi $t5, $t5, 0xF #Nibble 1 do Byte 3
andi $t6, $t1, 0xF #Mibble 2 do Byte 3

#Determinando os bytes válidos a partir dos Nibbles do Byte 3
beq $t5, 2, skip_byte2
beq $t5, 1, skip_byte1
beq $t5, 0, skip_byte0

skip_byte2:
	move $a0, $t3
	move $a1, $t4
	j sel_nibble
skip_byte1:
	move $a0, $t2
	move $a1, $t4
	j sel_nibble
skip_byte0:
	move $a0, $t2
	move $a1, $t3
	j sel_nibble
	
sel_nibble:
	beqz $t6, ext_nibble0 #Se o nibble for 0
	
	#Caso não seja 0
	
	srl $a0, $a0, 4
	andi $a0, $a0, 0xF
		
	srl $a1, $a1, 4
	andi $a1, $a1, 0xF
	
	j conc
	
	ext_nibble0:
		and $a0, $a0, 0x0000000F
		
		and $a1, $a1, 0x0000000F
		
conc:
sll $a0,$a0,4
or $a0,$a0,$a1

#Printar ascii

li $v0, 11
syscall

addi $t7, $t7, 4

#Fim do loop
j start_loop

exit:
li $v0, 10
syscall
